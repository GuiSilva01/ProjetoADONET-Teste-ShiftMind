@model UsuarioModel

@{
    ViewBag.Title = "Editar";
}
<div>

</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<!-- MAIN CONTENT -->
<div id="content">
    <div class="row">
        <div class="col-xs-12 col-sm-9 col-md-9 col-lg-9">
            <h1 class="page-title txt-color-blueDark">

                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-pencil-square-o"></i>
                Editar
                <span>
                    >
                    @Html.ActionLink("Usuário", "Usuarios")
                </span>
            </h1>
        </div>
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">


        <!-- START ROW -->

        <div class="row">

            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-6">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-building"></i> </span>
                        <h2>Edição de Usuário </h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">

                            @using (Html.BeginForm("Edit", "ControleAcesso", FormMethod.Post, new { id = "checkout-form", @class = "smart-form", novalidate = "novalidate" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(model => model.Id)
                                @Html.Hidden("Password", "0")
                                <fieldset>
                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-prepend fa fa-building"></i>
                                                @*<input type="text" name="nome" placeholder="Nome" value=@Model.Nome>*@
                                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @type = "text", @name = "nome", @placeholder = "Nome", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                            </label>
                                        </section>
                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-prepend fa fa-list-alt"></i>
                                                @*<input type="text" name="cnpj" placeholder="CNPJ" value=@Model.Cnpj>*@
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @type = "text", @name = "email", @placeholder = "E-mail", @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </label>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-prepend fa fa-building"></i>
                                                <input type="text" name="passwordfake" placeholder="Senha" disabled="disabled" value="******">
                                            </label>
                                        </section>
                                        <section class="col col-6">
                                            <label class="input">
                                                <i class="icon-append fa fa-chevron-down"></i>
                                                <input type="text" list="GrupoList" id="Grupo" name="Grupo" placeholder="Escolha o Grupo de Permissão" value="@Model.Grupo">
                                                <datalist id="GrupoList">
                                                    @foreach (var item in ViewBag.Grupos)
                                                    {
                                                        <option data-value="@item.Id" selected="@item.Selected">@item.Name</option>
                                                    }
                                                </datalist>
                                            </label>
                                            <label class="dropdown-menu">
                                                <i class="icon-prepend fa fa-list-alt"></i>
                                                @Html.ValidationMessageFor(model => model.Grupo, "", new { @class = "text-danger" })
                                            </label>
                                        </section>
                                    </div>

                                    <div class="row">
                                        <section class="col col-3">
                                            <label class="toggle">
                                                <!--<input type="checkbox" name="ativo" @(Model.Ativo ? "checked" : "")>-->
                                                @Html.EditorFor(model => model.Ativo, new { htmlAttributes = new { @type = "checkbox", @name = "ativo", @class = "form-control" } })
                                                <i data-swchon-text="SIM" data-swchoff-text="NÃO"></i>Ativo?
                                            </label>
                                        </section>
                                    </div>

                                </fieldset>
                                <footer>
                                    <button type="submit" class="btn btn-primary">Alterar</button>
                                    <input type="button" value="Alterar Senha" class="btn btn-primary" onclick="location.href='@Url.Action("Password", "ControleAcesso", new { id = Model.Id })'" />
                                    <input type="button" value="Voltar" class="btn btn-primary" onclick="location.href='@Url.Action("Usuarios", "ControleAcesso")'" />
                                </footer>
                            }
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
            <!-- END COL -->
        </div>
        <!-- END ROW -->
    </section>
    <!-- end widget grid -->
</div>
<!-- END MAIN CONTENT -->

@section pagespecific {
    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {
            
            var $checkoutForm = $('#checkout-form').validate({
                // Rules for form validation
                rules: {
                    //nome: {
                    //    required: true
                    //},
                    //cnpj: {
                    //    required: true
                    //}
                },

                // Messages for form validation
                messages: {
                    //nome: {
                    //    required: ''
                    //},
                    //cnpj: {
                    //    required: ''
                    //}
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });

        })

    </script>
}